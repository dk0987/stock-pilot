scalar UUID
scalar DateTime
type InventoryStock{
    id : [UUID!]!
    warehouse : UUID!
    warehouseName    : String!
    warehouseAddress : String
    warehouseCity    : String
    warehouseStates  : String
    warehouseZip     : String!
    warehouseCountry : String!
    warehousePhone   : String!
    warehouseEmail   : String
    warehouseCreatedBy : UUID
    warehouseCreatedAt : DateTime
}

#Input type
input InventoryStockCreateInput{
    warehouse : UUID!
    product   : UUID!
    quantity  : Int
}

input InventoryStockUpdateInput{
   id : UUID!
   quantity : UUID!
   warehouse : UUID!
   product   : UUID!
}

input InventoryStockQuanUpdateInput{
    id : UUID!
    quantity : Int
}

type Query{
    findAllInventoryStock : [InventoryStock!]!
    findInventoryByWarehouse(warehouseId : UUID) : InventoryStock
}

type Mutation{
    createInventoryStock(input : InventoryStockCreateInput!) : InventoryStock!
    updateInventoryStock(input : InventoryStockUpdateInput) : InventoryStock!
    updateInventoryStockQuantity(input : InventoryStockQuanUpdateInput) : InventoryStock!
}